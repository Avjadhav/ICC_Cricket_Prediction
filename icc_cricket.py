# -*- coding: utf-8 -*-
"""ICC_cricket.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1orp3guVguK7dPQtqB9x1OneobWarsP_-
"""

!pip install -U -q PyDrive
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials

auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

downloaded = drive.CreateFile({'id':'1uqBcb-4BGe2x7N3HRkP43elRPJVv8hIv'}) # replace the id with id of file you want to access
downloaded.GetContentFile('ICC_cricket.csv')

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
plt.rcParams['figure.figsize'] = (20.0, 10.0)

data= pd.read_csv('ICC_cricket.csv')
print(data.shape)
data.head()

X = data['Mat'].values
Y = data['Runs'].values

mean_x =np.mean(X)
mean_y =np.mean(Y)

m = len(X)

numer = 0
denom = 0
for i in range(m):
  numer += (X[i] - mean_x) * (Y[i] -mean_y)
  denom += (X[i] - mean_x) **2
b1 = numer / denom
b0 = mean_y - (b1 * mean_x)

print(b1,b0)

max_x = np.max(X) + 100
min_x = np.min(X) - 100

x = np.linspace(min_x, max_x,1000)
y = b0 + b1 *x

plt.plot(x,y, color='#58b970', label='Regression line')
plt.scatter(x,y, c='#ef5423', label='Scatter plot')

plt.xlabel('Matches')
plt.ylabel('Runs')
plt.legend()
plt.show()



corr_matrix = data.corr()
fig, ax = plt.subplots(figsize=(15, 15))
ax = sns.heatmap(corr_matrix,
                 annot=True,
                 linewidths=0.5,
                 fmt=".2f",
                 cmap="YlGnBu");
bottom, top = ax.get_ylim()
ax.set_ylim(bottom + 0.5, top - 0.5)

df= pd.DataFrame(data, columns = ['Mat', 'Runs',  
                                    '100', '50', 
                                    '0'] ) 
df.hist()
plt.show()

df.plot.bar() 
  
# plot between 2 attributes 
plt.bar(df['Mat'], df['100']) 
plt.xlabel("player") 
plt.ylabel("100") 
plt.show()

plt.scatter(data['Player'], data['6s']) 
plt.show()